{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veerr\\\\OneDrive\\\\Desktop\\\\vendorAvailabilityCheck\\\\frontend\\\\src\\\\components\\\\PaymentButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentButton = ({\n  amount,\n  shopId,\n  onSuccess\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [razorpayLoaded, setRazorpayLoaded] = useState(false);\n\n  // Load Razorpay script\n  useEffect(() => {\n    const loadRazorpay = () => {\n      return new Promise(resolve => {\n        const script = document.createElement('script');\n        script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n        script.onload = () => {\n          setRazorpayLoaded(true);\n          resolve(true);\n        };\n        script.onerror = () => {\n          setRazorpayLoaded(false);\n          resolve(false);\n        };\n        document.body.appendChild(script);\n      });\n    };\n    loadRazorpay();\n  }, []);\n  const handlePayment = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      if (!razorpayLoaded) {\n        throw new Error('Razorpay SDK not loaded. Please refresh the page.');\n      }\n      if (!process.env.REACT_APP_RAZORPAY_KEY_ID) {\n        throw new Error('Razorpay key not configured. Please check your environment variables.');\n      }\n\n      // Create order\n      const orderResponse = await axios.post('http://localhost:5000/api/payment/create-order', {\n        amount,\n        shopId\n      });\n      if (!orderResponse.data.success || !orderResponse.data.order) {\n        throw new Error(orderResponse.data.error || 'Failed to create order');\n      }\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: orderResponse.data.order.amount,\n        currency: orderResponse.data.order.currency,\n        name: \"Vendor Availability Check\",\n        description: \"Payment for viewing vendor contact\",\n        order_id: orderResponse.data.order.id,\n        handler: async response => {\n          try {\n            // Verify payment\n            const verifyResponse = await axios.post('http://localhost:5000/api/payment/verify', {\n              razorpay_order_id: response.razorpay_order_id,\n              razorpay_payment_id: response.razorpay_payment_id,\n              razorpay_signature: response.razorpay_signature\n            });\n            if (verifyResponse.data.success) {\n              onSuccess(verifyResponse.data.payment);\n            } else {\n              setError(verifyResponse.data.message || 'Payment verification failed');\n            }\n          } catch (error) {\n            var _error$response, _error$response$data;\n            console.error('Payment verification error:', error);\n            setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.error) || 'Payment verification failed');\n          }\n        },\n        prefill: {\n          name: \"User Name\",\n          email: \"user@example.com\",\n          contact: \"9999999999\"\n        },\n        notes: {\n          shopId: shopId\n        },\n        theme: {\n          color: \"#528FF0\"\n        }\n      };\n      const razorpay = new window.Razorpay(options);\n      razorpay.open();\n      razorpay.on('payment.failed', async response => {\n        try {\n          // Log failed payment\n          await axios.post('http://localhost:5000/api/payment/failed', {\n            razorpay_order_id: response.error.metadata.order_id,\n            error_code: response.error.code,\n            error_description: response.error.description\n          });\n          setError(response.error.description || 'Payment failed. Please try again.');\n        } catch (error) {\n          console.error('Error logging payment failure:', error);\n          setError('Payment failed. Please try again.');\n        }\n      });\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Payment error:', error);\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.error) || error.message || 'Failed to initiate payment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-button-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"payment-button\",\n      onClick: handlePayment,\n      disabled: loading || !razorpayLoaded,\n      children: loading ? 'Processing...' : !razorpayLoaded ? 'Loading...' : `Pay â‚¹${amount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentButton, \"MKkOFY8pPu/Baw61zNw8tEwd4zI=\");\n_c = PaymentButton;\nexport default PaymentButton;\nvar _c;\n$RefreshReg$(_c, \"PaymentButton\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","PaymentButton","amount","shopId","onSuccess","_s","loading","setLoading","error","setError","razorpayLoaded","setRazorpayLoaded","loadRazorpay","Promise","resolve","script","document","createElement","src","onload","onerror","body","appendChild","handlePayment","Error","process","env","REACT_APP_RAZORPAY_KEY_ID","orderResponse","post","data","success","order","options","key","currency","name","description","order_id","id","handler","response","verifyResponse","razorpay_order_id","razorpay_payment_id","razorpay_signature","payment","message","_error$response","_error$response$data","console","prefill","email","contact","notes","theme","color","razorpay","window","Razorpay","open","on","metadata","error_code","code","error_description","_error$response2","_error$response2$data","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/veerr/OneDrive/Desktop/vendorAvailabilityCheck/frontend/src/components/PaymentButton.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PaymentButton = ({ amount, shopId, onSuccess }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [razorpayLoaded, setRazorpayLoaded] = useState(false);\r\n\r\n  // Load Razorpay script\r\n  useEffect(() => {\r\n    const loadRazorpay = () => {\r\n      return new Promise((resolve) => {\r\n        const script = document.createElement('script');\r\n        script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n        script.onload = () => {\r\n          setRazorpayLoaded(true);\r\n          resolve(true);\r\n        };\r\n        script.onerror = () => {\r\n          setRazorpayLoaded(false);\r\n          resolve(false);\r\n        };\r\n        document.body.appendChild(script);\r\n      });\r\n    };\r\n\r\n    loadRazorpay();\r\n  }, []);\r\n\r\n  const handlePayment = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      if (!razorpayLoaded) {\r\n        throw new Error('Razorpay SDK not loaded. Please refresh the page.');\r\n      }\r\n\r\n      if (!process.env.REACT_APP_RAZORPAY_KEY_ID) {\r\n        throw new Error('Razorpay key not configured. Please check your environment variables.');\r\n      }\r\n\r\n      // Create order\r\n      const orderResponse = await axios.post('http://localhost:5000/api/payment/create-order', {\r\n        amount,\r\n        shopId\r\n      });\r\n\r\n      if (!orderResponse.data.success || !orderResponse.data.order) {\r\n        throw new Error(orderResponse.data.error || 'Failed to create order');\r\n      }\r\n\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: orderResponse.data.order.amount,\r\n        currency: orderResponse.data.order.currency,\r\n        name: \"Vendor Availability Check\",\r\n        description: \"Payment for viewing vendor contact\",\r\n        order_id: orderResponse.data.order.id,\r\n        handler: async (response) => {\r\n          try {\r\n            // Verify payment\r\n            const verifyResponse = await axios.post('http://localhost:5000/api/payment/verify', {\r\n              razorpay_order_id: response.razorpay_order_id,\r\n              razorpay_payment_id: response.razorpay_payment_id,\r\n              razorpay_signature: response.razorpay_signature\r\n            });\r\n\r\n            if (verifyResponse.data.success) {\r\n              onSuccess(verifyResponse.data.payment);\r\n            } else {\r\n              setError(verifyResponse.data.message || 'Payment verification failed');\r\n            }\r\n          } catch (error) {\r\n            console.error('Payment verification error:', error);\r\n            setError(error.response?.data?.error || 'Payment verification failed');\r\n          }\r\n        },\r\n        prefill: {\r\n          name: \"User Name\",\r\n          email: \"user@example.com\",\r\n          contact: \"9999999999\"\r\n        },\r\n        notes: {\r\n          shopId: shopId\r\n        },\r\n        theme: {\r\n          color: \"#528FF0\"\r\n        }\r\n      };\r\n\r\n      const razorpay = new window.Razorpay(options);\r\n      razorpay.open();\r\n\r\n      razorpay.on('payment.failed', async (response) => {\r\n        try {\r\n          // Log failed payment\r\n          await axios.post('http://localhost:5000/api/payment/failed', {\r\n            razorpay_order_id: response.error.metadata.order_id,\r\n            error_code: response.error.code,\r\n            error_description: response.error.description\r\n          });\r\n          setError(response.error.description || 'Payment failed. Please try again.');\r\n        } catch (error) {\r\n          console.error('Error logging payment failure:', error);\r\n          setError('Payment failed. Please try again.');\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Payment error:', error);\r\n      setError(error.response?.data?.error || error.message || 'Failed to initiate payment. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-button-container\">\r\n      {error && <div className=\"payment-error\">{error}</div>}\r\n      <button\r\n        className=\"payment-button\"\r\n        onClick={handlePayment}\r\n        disabled={loading || !razorpayLoaded}\r\n      >\r\n        {loading ? 'Processing...' : !razorpayLoaded ? 'Loading...' : `Pay â‚¹${amount}`}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentButton; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAC;EAAEC,MAAM;EAAEC,MAAM;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACvD,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,cAAc,EAAEC,iBAAiB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACAC,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAGA,CAAA,KAAM;MACzB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAK;QAC9B,MAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;QAC/CF,MAAM,CAACG,GAAG,GAAG,8CAA8C;QAC3DH,MAAM,CAACI,MAAM,GAAG,MAAM;UACpBR,iBAAiB,CAAC,IAAI,CAAC;UACvBG,OAAO,CAAC,IAAI,CAAC;QACf,CAAC;QACDC,MAAM,CAACK,OAAO,GAAG,MAAM;UACrBT,iBAAiB,CAAC,KAAK,CAAC;UACxBG,OAAO,CAAC,KAAK,CAAC;QAChB,CAAC;QACDE,QAAQ,CAACK,IAAI,CAACC,WAAW,CAACP,MAAM,CAAC;MACnC,CAAC,CAAC;IACJ,CAAC;IAEDH,YAAY,CAAC,CAAC;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMW,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChC,IAAI;MACFhB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,IAAI,CAAC;MAEd,IAAI,CAACC,cAAc,EAAE;QACnB,MAAM,IAAIc,KAAK,CAAC,mDAAmD,CAAC;MACtE;MAEA,IAAI,CAACC,OAAO,CAACC,GAAG,CAACC,yBAAyB,EAAE;QAC1C,MAAM,IAAIH,KAAK,CAAC,uEAAuE,CAAC;MAC1F;;MAEA;MACA,MAAMI,aAAa,GAAG,MAAM9B,KAAK,CAAC+B,IAAI,CAAC,gDAAgD,EAAE;QACvF3B,MAAM;QACNC;MACF,CAAC,CAAC;MAEF,IAAI,CAACyB,aAAa,CAACE,IAAI,CAACC,OAAO,IAAI,CAACH,aAAa,CAACE,IAAI,CAACE,KAAK,EAAE;QAC5D,MAAM,IAAIR,KAAK,CAACI,aAAa,CAACE,IAAI,CAACtB,KAAK,IAAI,wBAAwB,CAAC;MACvE;MAEA,MAAMyB,OAAO,GAAG;QACdC,GAAG,EAAET,OAAO,CAACC,GAAG,CAACC,yBAAyB;QAC1CzB,MAAM,EAAE0B,aAAa,CAACE,IAAI,CAACE,KAAK,CAAC9B,MAAM;QACvCiC,QAAQ,EAAEP,aAAa,CAACE,IAAI,CAACE,KAAK,CAACG,QAAQ;QAC3CC,IAAI,EAAE,2BAA2B;QACjCC,WAAW,EAAE,oCAAoC;QACjDC,QAAQ,EAAEV,aAAa,CAACE,IAAI,CAACE,KAAK,CAACO,EAAE;QACrCC,OAAO,EAAE,MAAOC,QAAQ,IAAK;UAC3B,IAAI;YACF;YACA,MAAMC,cAAc,GAAG,MAAM5C,KAAK,CAAC+B,IAAI,CAAC,0CAA0C,EAAE;cAClFc,iBAAiB,EAAEF,QAAQ,CAACE,iBAAiB;cAC7CC,mBAAmB,EAAEH,QAAQ,CAACG,mBAAmB;cACjDC,kBAAkB,EAAEJ,QAAQ,CAACI;YAC/B,CAAC,CAAC;YAEF,IAAIH,cAAc,CAACZ,IAAI,CAACC,OAAO,EAAE;cAC/B3B,SAAS,CAACsC,cAAc,CAACZ,IAAI,CAACgB,OAAO,CAAC;YACxC,CAAC,MAAM;cACLrC,QAAQ,CAACiC,cAAc,CAACZ,IAAI,CAACiB,OAAO,IAAI,6BAA6B,CAAC;YACxE;UACF,CAAC,CAAC,OAAOvC,KAAK,EAAE;YAAA,IAAAwC,eAAA,EAAAC,oBAAA;YACdC,OAAO,CAAC1C,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;YACnDC,QAAQ,CAAC,EAAAuC,eAAA,GAAAxC,KAAK,CAACiC,QAAQ,cAAAO,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBlB,IAAI,cAAAmB,oBAAA,uBAApBA,oBAAA,CAAsBzC,KAAK,KAAI,6BAA6B,CAAC;UACxE;QACF,CAAC;QACD2C,OAAO,EAAE;UACPf,IAAI,EAAE,WAAW;UACjBgB,KAAK,EAAE,kBAAkB;UACzBC,OAAO,EAAE;QACX,CAAC;QACDC,KAAK,EAAE;UACLnD,MAAM,EAAEA;QACV,CAAC;QACDoD,KAAK,EAAE;UACLC,KAAK,EAAE;QACT;MACF,CAAC;MAED,MAAMC,QAAQ,GAAG,IAAIC,MAAM,CAACC,QAAQ,CAAC1B,OAAO,CAAC;MAC7CwB,QAAQ,CAACG,IAAI,CAAC,CAAC;MAEfH,QAAQ,CAACI,EAAE,CAAC,gBAAgB,EAAE,MAAOpB,QAAQ,IAAK;QAChD,IAAI;UACF;UACA,MAAM3C,KAAK,CAAC+B,IAAI,CAAC,0CAA0C,EAAE;YAC3Dc,iBAAiB,EAAEF,QAAQ,CAACjC,KAAK,CAACsD,QAAQ,CAACxB,QAAQ;YACnDyB,UAAU,EAAEtB,QAAQ,CAACjC,KAAK,CAACwD,IAAI;YAC/BC,iBAAiB,EAAExB,QAAQ,CAACjC,KAAK,CAAC6B;UACpC,CAAC,CAAC;UACF5B,QAAQ,CAACgC,QAAQ,CAACjC,KAAK,CAAC6B,WAAW,IAAI,mCAAmC,CAAC;QAC7E,CAAC,CAAC,OAAO7B,KAAK,EAAE;UACd0C,OAAO,CAAC1C,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;UACtDC,QAAQ,CAAC,mCAAmC,CAAC;QAC/C;MACF,CAAC,CAAC;IAEJ,CAAC,CAAC,OAAOD,KAAK,EAAE;MAAA,IAAA0D,gBAAA,EAAAC,qBAAA;MACdjB,OAAO,CAAC1C,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;MACtCC,QAAQ,CAAC,EAAAyD,gBAAA,GAAA1D,KAAK,CAACiC,QAAQ,cAAAyB,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBpC,IAAI,cAAAqC,qBAAA,uBAApBA,qBAAA,CAAsB3D,KAAK,KAAIA,KAAK,CAACuC,OAAO,IAAI,+CAA+C,CAAC;IAC3G,CAAC,SAAS;MACRxC,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACEP,OAAA;IAAKoE,SAAS,EAAC,0BAA0B;IAAAC,QAAA,GACtC7D,KAAK,iBAAIR,OAAA;MAAKoE,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAE7D;IAAK;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACtDzE,OAAA;MACEoE,SAAS,EAAC,gBAAgB;MAC1BM,OAAO,EAAEnD,aAAc;MACvBoD,QAAQ,EAAErE,OAAO,IAAI,CAACI,cAAe;MAAA2D,QAAA,EAEpC/D,OAAO,GAAG,eAAe,GAAG,CAACI,cAAc,GAAG,YAAY,GAAG,QAAQR,MAAM;IAAE;MAAAoE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACpE,EAAA,CA9HIJ,aAAa;AAAA2E,EAAA,GAAb3E,aAAa;AAgInB,eAAeA,aAAa;AAAC,IAAA2E,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}