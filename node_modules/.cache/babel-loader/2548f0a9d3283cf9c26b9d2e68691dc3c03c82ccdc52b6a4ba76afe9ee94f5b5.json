{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veerr\\\\OneDrive\\\\Desktop\\\\vendorAvailabilityCheck\\\\frontend\\\\src\\\\components\\\\PaymentButton.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentButton = ({\n  amount,\n  shopId,\n  onSuccess\n}) => {\n  _s();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const handlePayment = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n\n      // Create order\n      const orderResponse = await axios.post('http://localhost:5000/api/payment/create-order', {\n        amount,\n        shopId\n      });\n      const options = {\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\n        amount: orderResponse.data.amount,\n        currency: orderResponse.data.currency,\n        name: \"Vendor Availability Check\",\n        description: \"Payment for viewing vendor contact\",\n        order_id: orderResponse.data.id,\n        handler: async response => {\n          try {\n            // Verify payment\n            const verifyResponse = await axios.post('http://localhost:5000/api/payment/verify', {\n              razorpay_order_id: response.razorpay_order_id,\n              razorpay_payment_id: response.razorpay_payment_id,\n              razorpay_signature: response.razorpay_signature\n            });\n            if (verifyResponse.data.success) {\n              onSuccess(response);\n            } else {\n              setError('Payment verification failed');\n            }\n          } catch (error) {\n            console.error('Payment verification error:', error);\n            setError('Payment verification failed');\n          }\n        },\n        prefill: {\n          name: \"User Name\",\n          email: \"user@example.com\",\n          contact: \"9999999999\"\n        },\n        notes: {\n          shopId: shopId\n        },\n        theme: {\n          color: \"#528FF0\"\n        }\n      };\n      const razorpay = new window.Razorpay(options);\n      razorpay.open();\n      razorpay.on('payment.failed', async response => {\n        try {\n          // Log failed payment\n          await axios.post('http://localhost:5000/api/payment/failed', {\n            razorpay_order_id: response.error.metadata.order_id,\n            error_code: response.error.code,\n            error_description: response.error.description\n          });\n          setError('Payment failed. Please try again.');\n        } catch (error) {\n          console.error('Error logging payment failure:', error);\n        }\n      });\n    } catch (error) {\n      console.error('Payment error:', error);\n      setError('Failed to initiate payment. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"payment-button-container\",\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"payment-error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"payment-button\",\n      onClick: handlePayment,\n      disabled: loading,\n      children: loading ? 'Processing...' : `Pay ₹${amount}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n};\n_s(PaymentButton, \"Iz3ozxQ+abMaAIcGIvU8cKUcBeo=\");\n_c = PaymentButton;\nexport default PaymentButton;\nvar _c;\n$RefreshReg$(_c, \"PaymentButton\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","PaymentButton","amount","shopId","onSuccess","_s","loading","setLoading","error","setError","handlePayment","orderResponse","post","options","key","process","env","REACT_APP_RAZORPAY_KEY_ID","data","currency","name","description","order_id","id","handler","response","verifyResponse","razorpay_order_id","razorpay_payment_id","razorpay_signature","success","console","prefill","email","contact","notes","theme","color","razorpay","window","Razorpay","open","on","metadata","error_code","code","error_description","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Users/veerr/OneDrive/Desktop/vendorAvailabilityCheck/frontend/src/components/PaymentButton.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PaymentButton = ({ amount, shopId, onSuccess }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(null);\r\n\r\n  const handlePayment = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n\r\n      // Create order\r\n      const orderResponse = await axios.post('http://localhost:5000/api/payment/create-order', {\r\n        amount,\r\n        shopId\r\n      });\r\n\r\n      const options = {\r\n        key: process.env.REACT_APP_RAZORPAY_KEY_ID,\r\n        amount: orderResponse.data.amount,\r\n        currency: orderResponse.data.currency,\r\n        name: \"Vendor Availability Check\",\r\n        description: \"Payment for viewing vendor contact\",\r\n        order_id: orderResponse.data.id,\r\n        handler: async (response) => {\r\n          try {\r\n            // Verify payment\r\n            const verifyResponse = await axios.post('http://localhost:5000/api/payment/verify', {\r\n              razorpay_order_id: response.razorpay_order_id,\r\n              razorpay_payment_id: response.razorpay_payment_id,\r\n              razorpay_signature: response.razorpay_signature\r\n            });\r\n\r\n            if (verifyResponse.data.success) {\r\n              onSuccess(response);\r\n            } else {\r\n              setError('Payment verification failed');\r\n            }\r\n          } catch (error) {\r\n            console.error('Payment verification error:', error);\r\n            setError('Payment verification failed');\r\n          }\r\n        },\r\n        prefill: {\r\n          name: \"User Name\",\r\n          email: \"user@example.com\",\r\n          contact: \"9999999999\"\r\n        },\r\n        notes: {\r\n          shopId: shopId\r\n        },\r\n        theme: {\r\n          color: \"#528FF0\"\r\n        }\r\n      };\r\n\r\n      const razorpay = new window.Razorpay(options);\r\n      razorpay.open();\r\n\r\n      razorpay.on('payment.failed', async (response) => {\r\n        try {\r\n          // Log failed payment\r\n          await axios.post('http://localhost:5000/api/payment/failed', {\r\n            razorpay_order_id: response.error.metadata.order_id,\r\n            error_code: response.error.code,\r\n            error_description: response.error.description\r\n          });\r\n          setError('Payment failed. Please try again.');\r\n        } catch (error) {\r\n          console.error('Error logging payment failure:', error);\r\n        }\r\n      });\r\n\r\n    } catch (error) {\r\n      console.error('Payment error:', error);\r\n      setError('Failed to initiate payment. Please try again.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"payment-button-container\">\r\n      {error && <div className=\"payment-error\">{error}</div>}\r\n      <button\r\n        className=\"payment-button\"\r\n        onClick={handlePayment}\r\n        disabled={loading}\r\n      >\r\n        {loading ? 'Processing...' : `Pay ₹${amount}`}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PaymentButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}