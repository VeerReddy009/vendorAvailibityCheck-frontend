{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\veerr\\\\OneDrive\\\\Desktop\\\\vendorAvailabilityCheck\\\\frontend\\\\src\\\\components\\\\PaymentButton.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PaymentButton = ({\n  amount,\n  shopId,\n  onSuccess\n}) => {\n  const loadRazorpay = () => {\n    return new Promise(resolve => {\n      const script = document.createElement('script');\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\n      script.onload = () => resolve(true);\n      script.onerror = () => resolve(false);\n      document.body.appendChild(script);\n    });\n  };\n  const handlePayment = async () => {\n    const res = await loadRazorpay();\n    if (!res) {\n      alert('Razorpay SDK failed to load');\n      return;\n    }\n    try {\n      // Get order details from backend\n      const {\n        data\n      } = await axios.post('http://localhost:5000/api/payment/create-order', {\n        amount: amount * 100,\n        // Convert to smallest currency unit (paise)\n        shopId\n      });\n      const options = {\n        key: 'YOUR_RAZORPAY_KEY_ID',\n        // Replace with your Razorpay Key ID\n        amount: data.amount,\n        currency: data.currency,\n        name: 'Vendor Availability Check',\n        description: 'Payment for shop services',\n        order_id: data.id,\n        handler: async response => {\n          try {\n            // Verify payment with backend\n            const {\n              data\n            } = await axios.post('http://localhost:5000/api/payment/verify', {\n              orderCreationId: response.razorpay_order_id,\n              razorpayPaymentId: response.razorpay_payment_id,\n              razorpaySignature: response.razorpay_signature,\n              shopId\n            });\n            alert('Payment Successful');\n            if (onSuccess) onSuccess(data);\n          } catch (err) {\n            alert('Payment verification failed');\n          }\n        },\n        prefill: {\n          name: 'Customer Name',\n          email: 'customer@example.com',\n          contact: '9999999999'\n        },\n        theme: {\n          color: '#3399cc'\n        }\n      };\n      const paymentObject = new window.Razorpay(options);\n      paymentObject.open();\n    } catch (error) {\n      alert('Error creating payment order');\n      console.error('Payment error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handlePayment,\n    className: \"payment-button\",\n    children: [\"Pay \\u20B9\", amount]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n};\n_c = PaymentButton;\nexport default PaymentButton;\nvar _c;\n$RefreshReg$(_c, \"PaymentButton\");","map":{"version":3,"names":["React","axios","jsxDEV","_jsxDEV","PaymentButton","amount","shopId","onSuccess","loadRazorpay","Promise","resolve","script","document","createElement","src","onload","onerror","body","appendChild","handlePayment","res","alert","data","post","options","key","currency","name","description","order_id","id","handler","response","orderCreationId","razorpay_order_id","razorpayPaymentId","razorpay_payment_id","razorpaySignature","razorpay_signature","err","prefill","email","contact","theme","color","paymentObject","window","Razorpay","open","error","console","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/veerr/OneDrive/Desktop/vendorAvailabilityCheck/frontend/src/components/PaymentButton.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\n\r\nconst PaymentButton = ({ amount, shopId, onSuccess }) => {\r\n  const loadRazorpay = () => {\r\n    return new Promise((resolve) => {\r\n      const script = document.createElement('script');\r\n      script.src = 'https://checkout.razorpay.com/v1/checkout.js';\r\n      script.onload = () => resolve(true);\r\n      script.onerror = () => resolve(false);\r\n      document.body.appendChild(script);\r\n    });\r\n  };\r\n\r\n  const handlePayment = async () => {\r\n    const res = await loadRazorpay();\r\n    if (!res) {\r\n      alert('Razorpay SDK failed to load');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Get order details from backend\r\n      const { data } = await axios.post('http://localhost:5000/api/payment/create-order', {\r\n        amount: amount * 100, // Convert to smallest currency unit (paise)\r\n        shopId\r\n      });\r\n\r\n      const options = {\r\n        key: 'YOUR_RAZORPAY_KEY_ID', // Replace with your Razorpay Key ID\r\n        amount: data.amount,\r\n        currency: data.currency,\r\n        name: 'Vendor Availability Check',\r\n        description: 'Payment for shop services',\r\n        order_id: data.id,\r\n        handler: async (response) => {\r\n          try {\r\n            // Verify payment with backend\r\n            const { data } = await axios.post('http://localhost:5000/api/payment/verify', {\r\n              orderCreationId: response.razorpay_order_id,\r\n              razorpayPaymentId: response.razorpay_payment_id,\r\n              razorpaySignature: response.razorpay_signature,\r\n              shopId\r\n            });\r\n\r\n            alert('Payment Successful');\r\n            if (onSuccess) onSuccess(data);\r\n          } catch (err) {\r\n            alert('Payment verification failed');\r\n          }\r\n        },\r\n        prefill: {\r\n          name: 'Customer Name',\r\n          email: 'customer@example.com',\r\n          contact: '9999999999'\r\n        },\r\n        theme: {\r\n          color: '#3399cc'\r\n        }\r\n      };\r\n\r\n      const paymentObject = new window.Razorpay(options);\r\n      paymentObject.open();\r\n    } catch (error) {\r\n      alert('Error creating payment order');\r\n      console.error('Payment error:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <button \r\n      onClick={handlePayment}\r\n      className=\"payment-button\"\r\n    >\r\n      Pay â‚¹{amount}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default PaymentButton; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}